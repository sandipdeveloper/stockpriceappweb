<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.stockpriceapp</groupId>
	<artifactId>stockpriceservice</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>

	<name>stockpriceservice</name>
	<url>http://maven.apache.org</url>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<springframework.version>4.2.4.RELEASE</springframework.version>
	</properties>

	<dependencies>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.7</version>
		</dependency>

		<dependency>
			<groupId>com.jimmoores</groupId>
			<artifactId>quandl</artifactId>
			<version>1.3.0</version>
		</dependency>

		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.17</version>
		</dependency>

		<!-- Spring framework -->

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${springframework.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${springframework.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${springframework.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${springframework.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${springframework.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${springframework.version}</version>
		</dependency>

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.0.1</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>javax.servlet.jsp.jstl</groupId>
			<artifactId>jstl-api</artifactId>
			<version>1.2</version>
			<scope>provided</scope>			
		</dependency>

		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>javax.servlet.jsp-api</artifactId>
			<version>2.3.1</version>
			<scope>provided</scope>			
		</dependency>

		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-mapper-asl</artifactId>
			<version>1.9.13</version>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
			<version>2.7.2</version>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>2.7.2</version>
		</dependency>

		<!-- Spring AOP dependency -->
		<dependency>
			<groupId>cglib</groupId>
			<artifactId>cglib</artifactId>
			<version>2.2</version>
		</dependency>

		<!-- MySQL database driver -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.9</version>
		</dependency>

		<!-- Hibernate framework -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.4</version>
		</dependency>

		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>5.1.0.Final</version>
		</dependency>

		<!-- Hibernate library dependecy start -->
		<dependency>
			<groupId>dom4j</groupId>
			<artifactId>dom4j</artifactId>
			<version>1.6.1</version>
		</dependency>

		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
			<version>1.1.1</version>
		</dependency>

		<dependency>
			<groupId>commons-collections</groupId>
			<artifactId>commons-collections</artifactId>
			<version>3.2.1</version>
		</dependency>

		<dependency>
			<groupId>antlr</groupId>
			<artifactId>antlr</artifactId>
			<version>2.7.7</version>
		</dependency>

        <dependency>
            <groupId>org.easymock</groupId>
            <artifactId>easymock</artifactId>
            <version>3.1</version>
            <scope>provided</scope>
        </dependency>

		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-api-mockito</artifactId>
			<version>1.6.4</version>
		</dependency>

		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-module-junit4</artifactId>
			<version>1.6.4</version>
		</dependency>

		<dependency>
		  <groupId>org.powermock</groupId>
		  <artifactId>powermock-core</artifactId>
		  <version>1.6.4</version>
		</dependency>
		
		<dependency>
		  <groupId>org.powermock</groupId>
		  <artifactId>powermock-module-junit4</artifactId>
		  <version>1.6.4</version>
		</dependency>

        <dependency>
            <groupId>org.easymock</groupId>
            <artifactId>easymockclassextension</artifactId>
            <version>3.1</version>
            <scope>provided</scope>
        </dependency>
        
		<dependency>
			<groupId>org.apache.tomcat</groupId>
			<artifactId>tomcat-jdbc</artifactId>
			<version>7.0.52</version>
			<exclusions>
				<exclusion>
					<groupId>org.apache.tomcat</groupId>
					<artifactId>tomcat-juli</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.apache.tomcat.extras</groupId>
			<artifactId>tomcat-extras-juli-adapters</artifactId>
			<version>7.0.52</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.2</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
					<meminitial>256m</meminitial>
					<maxmem>1024m</maxmem>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.tomcat.maven</groupId>
				<artifactId>tomcat7-maven-plugin</artifactId>
				<version>2.2</version>
				<configuration>
					<path>/</path>
					<skipErrorOnShutdown>false</skipErrorOnShutdown>
					<failOnError>true</failOnError>
					<uriEncoding>UTF-8</uriEncoding>
				</configuration>
				<executions>
					<execution>
						<id>tomcat-run</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>run-war-only</goal>
						</goals>
						<configuration>
							<fork>true</fork>
							<port>${integration.random.port}</port>
							<!-- dump port number to properties file to be read in by test -->
							<propertiesPortFilePath>${project.build.directory}/tomcat.properties
							</propertiesPortFilePath>
							<systemProperties>
								<spring.profiles.active>mock</spring.profiles.active>
							</systemProperties>
						</configuration>
					</execution>
					<execution>
						<id>tomcat-shutdown</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>shutdown</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
	      
	      <plugin>
	        <groupId>org.codehaus.mojo</groupId>
	        <artifactId>properties-maven-plugin</artifactId>
	        <version>1.0.0</version>
	        <executions>
	          <execution>
	            <phase>initialize</phase>
	            <goals>
	              <goal>read-project-properties</goal>
	            </goals>
	            <configuration>
				<files>
                	<file>src/main/resources/properties/database.properties</file>
              	</files>
	            </configuration>
	          </execution>
	        </executions>
	      </plugin>
		      
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>sql-maven-plugin</artifactId>
				<version>1.5</version>

				<dependencies>
					<dependency>
						<groupId>mysql</groupId>
						<artifactId>mysql-connector-java</artifactId>
						<version>5.1.9</version>
					</dependency>
				</dependencies>

				<configuration>
					<driver>${jdbc.driverClassName}</driver>
					<url>${jdbc.base.url}</url>
					<username>${jdbc.username}</username>
					<password>${jdbc.password}</password>
				</configuration>

				<executions>
					<execution>
						<id>create-schema</id>
						<phase>install</phase>
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<autocommit>true</autocommit>
							<srcFiles>
								<srcFile>src/main/sql/create-schema.sql</srcFile>
							</srcFiles>
						</configuration>
					</execution>

					<execution>
						<id>create-table</id>
						<phase>install</phase>
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<autocommit>true</autocommit>
							<srcFiles>
								<srcFile>src/main/sql/create-table-companyinfo.sql</srcFile>
								<srcFile>src/main/sql/create-table-stockquote.sql</srcFile>
							</srcFiles>
						</configuration>
					</execution>

				</executions>
			</plugin>
		</plugins>
	</build>
</project>
